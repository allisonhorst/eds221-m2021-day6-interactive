---
title: "Day 6 interactive"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(here)
library(janitor)
```

```{r}
wb_indicators <- read_csv(here("data", "wb_indicators.csv"), na = c("..", ""))
```

```{r}
wb_indicators_long <- wb_indicators %>% 
  pivot_longer(cols = `2001 [YR2001]`: `2020 [YR2020]`, 
               names_to = "year",
               values_to = "indicator_value")
```

```{r}
wb_indicators_clean <- wb_indicators_long %>% 
  separate(col = year, into = c("year", "year_chr"), sep = " ") %>% 
  select(-year_chr, -`Country Code`, -`Series Code`)
```

```{r}
unique(wb_indicators_clean$`Series Name`)
```

```{r}
wb_indicators_tidy <- wb_indicators_clean %>% 
  drop_na(`Series Name`) %>% 
  pivot_wider(names_from = `Series Name`, 
              values_from = indicator_value)
#drop na removes all NA values in the Series Name column (dangerous if not careful)

```

```{r}
mutate(year = as.numeric(year))
```

```{r}
#names(wb_indicators_tidy) <- c("country", "year", "access_cean_fuels_pp", "access_electricity_pp", "co2_emissions_kt", "fossil_fuel_cons_pt", "water_stress") 
##only based on position and risky cause things move
```

```{r}
#rename(new_name = old name)
dplyr::rename(country = "County Name", access_fuels_pp = "Access to clean fuels and technologies for cooking (% of population)", access_electricity_pp = "Access to electricity (% of population)", co2_emissions_kt = "CO2 emissions (kt)", fossil_fuel_cons_pt = "Fossil fuel energy consumption (% of total)", water_stress = "Level of water stress: freshwater withdrawal as a proportion of available freshwater resources")
```

```{r}
ggplot(data = wb_indicators_tidy, aes(x = year, y = co2_emissions_kt)) + 
  geom_line(aes(color = country)) + 
  theme(Legend.position="none")
```
